entity InvUser (cims_user) {
    firstName String,
    lastName String,
    postTitle String,
}
entity InvDepartment  (cims_inv_dept) {
    departmentName String,
}

entity InvStorage (cims_inv_storage) {
    storageCode String,
    storageName String,
    storageLocation StorageLocation,
}

enum StorageLocation {
	GLI, GLII, GSQ, SPL
}

entity ItemStock (cims_item_stock) {
    itemName String required,
  	casNumber String,
    stockBookFolio String,
    itemManufacturer String,
 	itemCapacity Float,
    unitPrice Float,
    totalQuantity Float,
    minimumQuantity Float,
    itemStatus ItemStatus,
    stockStore StockStore
    creatorId Integer,
    createdOn Instant,
    lastUpdated Instant,
    sdsfile Blob,
}

entity CasNumber (cims_cas_number) {
    casNumber String,
    itemName String,
}

entity WasteItem (cims_waste_item) {
    itemQuantity Float,
    minQuantity Float,
}

entity WasteVendor (cims_waste_vendor) {
    vendorName String,
    lastIssuedOn Instant,
}

enum ItemStatus {
	NEW, USED, OUTOFSTOCK
}
enum StockStore{
	ORG,
    INORG,
    ACIDS,
    NORM_GLASS,
    Q_FIT_GLASS,
    ORG_USED,
    INORG_USED
}

entity MeasUnit  (cims_meas_units) {
	measUnit String,
    measDesc String,
}

entity HazardCode (cims_item_hazard_code) {
	hazardCode Integer,
    hazardCodeDesc String,
}

enum TransactionType {
    ISSUE,
    ORDER,
    WASTE
}

entity ItemTransaction  (cims_item_transaction) {
    quantity Float required
    remarks String,
    transactionType TransactionType,
    transactionDate Instant,
}

relationship OneToMany {
    InvDepartment to InvStorage{department},
    InvStorage to ItemStock{invStorage required},
    MeasUnit to ItemStock{storageUnit required}
    ItemStock to ItemTransaction{itemStock required}
    ItemStock to WasteItem{itemStock required}
    InvUser to ItemTransaction{createdBy required}
}

relationship ManyToMany{
    InvDepartment to InvUser
    ItemStock to HazardCode
    WasteVendor to WasteItem
}

readOnly CasNumber,HazardCode
dto * with mapstruct except CasNumber
filter ItemStock,ItemTransaction
paginate ItemStock,ItemTransaction with pagination

